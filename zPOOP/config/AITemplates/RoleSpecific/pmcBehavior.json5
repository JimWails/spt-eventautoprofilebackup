{
  RoleTypes: ['sptbear', 'sptusec', 'assaultgroup'],
  AIDifficultyModifier: 0,
  difficulty: {
    normal: {
      Aiming: {
        //Calculation Logic Run Every Update
        // RECALC_SQR_DIST = this.RECALC_DIST * this.RECALC_DIST;

        // default - to the center of the body // 1 - randomly + center // 2 - randomly except for legs + center // 3 - first noticed part of the body
        // 4 - randomly + center + without head // 5 - randomly except for legs + center + without heads //6 - head first"
        AIMING_TYPE: 5,

        //In how many seconds after the first remark of the enemy, it will be possible to shoot at any part of the body
        ANY_PART_SHOOT_TIME: 30,

        //Chance that the bot will turn on the flashlight when aiming
        ANYTIME_LIGHT_WHEN_AIM_100: -1,

        //The base time after which the bot will move away from hitting it and stop affecting aiming
        BASE_HIT_AFFECTION_DELAY_SEC: 1.17,

        //Maximum distance the crosshair can move away from hitting the bot in degrees
        BASE_HIT_AFFECTION_MAX_ANG: 24,

        //Minimum distance the crosshair can move away from hitting the bot in degrees
        BASE_HIT_AFFECTION_MIN_ANG: 14,

        //Base shift in meters for aiming (example: BASE_SHIEF=5 => means at a distance of 20 meters it will aim like 20+5=25)
        BASE_SHIEF: 0.8,

        //Base shift in meters for aiming (example: BASE_SHIEF=5 => means at a distance of 20 meters it will aim like 20+5=25)
        BASE_SHIEF_STATIONARY_GRENADE: 1.1,

        //Zeroing speed coefficient. More == Better
        BETTER_PRECICING_COEF: 0.8,

        //The bot is considered to be moving if it has gone more than X per frame
        BOT_MOVE_IF_DELTA: 0.01,

        //Basic aiming time. Added to the result obtained by the formula
        BOTTOM_COEF: 0.25,

        //Increased aiming when peeking behind cover
        COEF_FROM_COVER: 0.75,

        //There will be so much more expansion if the bot shoots immediately
        COEF_IF_MOVE: 1.6,

        //Panic time when hitting a bot.
        DAMAGE_PANIC_TIME: 15,

        //This is the chance that the bot will mow fire when hit. The alternative is to worsen the aiming time.
        DAMAGE_TO_DISCARD_AIM_0_100: 96,

        //danger point shooting level
        DANGER_UP_POINT: 1.3,

        //If the enemy is closer than X, then there will be no scattering.
        DIST_TO_SHOOT_NO_OFFSET: 3,

        //If the enemy is closer than X, then we will only aim at the body.
        DIST_TO_SHOOT_TO_CENTER: 3,

        //the chance of triggering the delay specified in FIRST_CONTACT_ADD_SEC
        FIRST_CONTACT_ADD_CHANCE_100: 80,

        //Added to the first time the bot aims at the player
        FIRST_CONTACT_ADD_SEC: 0.05,

        //Enhanced aim factor
        HARD_AIM: 0.75,

        //chance of aiming while shooting [0;100]
        HARD_AIM_CHANCE_100: 50,

        // Time for max shooting improvement depending on how long the bot aims
        MAX_AIM_PRECICING: 2,

        //Max aiming time
        MAX_AIM_TIME: 1.5,

        //how much better shooting can get from zeroing in - 0.15 == 85%. 0.5 == 50% . 1 == 0%"
        MAX_AIMING_UPGRADE_BY_TIME: 0.85,

        //Max aiming time degradation
        MAX_TIME_DISCARD_AIM_SEC: 3.1,

        //Minimum damage for the bot to receive damage debuffs
        MIN_DAMAGE_TO_GET_HIT_AFFETS: 1,

        //Minimum aiming time degradation
        MIN_TIME_DISCARD_AIM_SEC: 2.3,

        //Chance that the next shot the bot will miss
        NEXT_SHOT_MISS_CHANCE_100: 100,

        //How much higher will the bot shoot if it wants to shoot to miss
        NEXT_SHOT_MISS_Y_OFFSET: 1,

        // blank for some reason
        OFFSET_RECAL_ANYWAY_TIME: 1,

        //Panic expansion gain factor
        PANIC_ACCURATY_COEF: 1.2,

        //Aim time is multiplied by this factor if char panics
        PANIC_COEF: 1.2,

        //Panic time at normal
        PANIC_TIME: 2,

        // distance when moving at which aiming will not be interrupted by XZ axis
        RECALC_DIST: 0.7,

        //After how many attempts to re-aim, the bot will still re-aim even if the target was very close
        RECALC_MUST_TIME: 3,

        //public float BASE_ANF_COEF = 7;  No idea what this is
        RECALC_SQR_DIST: 0.48999998,

        //The modifier of the dependence of aiming on the distance is not linear (another parameter is responsible for the linearity).
        //recommended values 0.2..1.3. //Less than 1 means the farther away the more accurate the linear dependence will be. More - oblique.")
        SCATTERING_DIST_MODIF: 0.7,

        //The modifier of the dependence of aiming on the distance is not linear (another parameter is responsible for linearity).
        //Recommended values are 0.2..1.3. //Less than 1 means the farther away the more accurate the linear dependence will be. More - oblique.") ]
        SCATTERING_DIST_MODIF_CLOSE: 0.82,

        //This is how ugly the bot gets when it gets corrupted ? corrupted not sure what translation is
        SCATTERING_HAVE_DAMAGE_COEF: 2,

        //Approximately how many shots on the target are needed to change the priority to shooting on the legs
        SHOOT_TO_CHANGE_PRIORITY: 5525,

        //If greater than 0 then a spherecast with the specified radius is used. If less than 0 then a linecast is used."
        SHPERE_FRIENDY_FIRE_SIZE: -1,

        //So much longer will it take to aim if the bot shoots immediately
        TIME_COEF_IF_MOVE: 1.5,

        //Retreat distance to check the possibility of a shot (To avoid sticking the barrel through the door)
        WEAPON_ROOT_OFFSET: 0.35,

        //Aiming dependency factor in the horizontal plane depending on the angle to the target
        XZ_COEF: 0.65,

        //Aiming dependency factor in the horizontal plane depending on the angle to the target
        XZ_COEF_STATIONARY_GRENADE: 0.8,

        //Aiming sphere compression level from below
        Y_BOTTOM_OFFSET_COEF: 0.015,

        //Aiming sphere compression level from above
        Y_TOP_OFFSET_COEF: 0.001,
      },
      Boss: {
        //Calculation Logic Run Every Update
        // this.KOJANIY_DIST_CORE_SPOS_RECALC_SQRT = this.KOJANIY_DIST_CORE_SPOS_RECALC * this.KOJANIY_DIST_CORE_SPOS_RECALC;
        // this.BOSS_DIST_TO_WARNING_OUT_SQRT = this.BOSS_DIST_TO_WARNING_OUT * this.BOSS_DIST_TO_WARNING_OUT;
        // this.BOSS_DIST_TO_SHOOT_SQRT = this.BOSS_DIST_TO_SHOOT * this.BOSS_DIST_TO_SHOOT;
        // this.BOSS_DIST_TO_WARNING_SQRT = this.BOSS_DIST_TO_WARNING * this.BOSS_DIST_TO_WARNING;
        // this.BOSS_DIST_TO_WARNING_SQRT_USEC = this.BOSS_DIST_TO_WARNING_USEC * this.BOSS_DIST_TO_WARNING_USEC;
        // this.BOSS_DIST_TO_WARNING_SQRT_BEAR = this.BOSS_DIST_TO_WARNING_BEAR * this.BOSS_DIST_TO_WARNING_BEAR;
        // this.MAX_DIST_DECIDER_TO_SEND_SQRT = this.MAX_DIST_DECIDER_TO_SEND * this.MAX_DIST_DECIDER_TO_SEND;
        // this.MAX_DIST_COVER_BOSS_SQRT = this.MAX_DIST_COVER_BOSS * this.MAX_DIST_COVER_BOSS;
        // this.KOJANIY_MIN_DIST_TO_LOOT_SQRT = this.KOJANIY_MIN_DIST_TO_LOOT * this.KOJANIY_MIN_DIST_TO_LOOT;

        //Distance closer than the boss will shoot.  it is this value squared aka 16*16
        BOSS_DIST_TO_SHOOT: 16,

        //Distance below which the boss will warn usec faction players
        BOSS_DIST_TO_WARNING: 34,

        //The distance beyond which the boss stops paying attention to the wild role types
        BOSS_DIST_TO_WARNING_OUT: 43,

        // Chance to use grenade?
        CHANCE_TO_SEND_GRENADE_100: 100,

        //Chance that when choosing a patrol path, the boss will choose the Rest Route instead of the main one
        CHANCE_USE_RESERVE_PATROL_100: 50,

        //Is everyone in cover a necessary condition to submit for verification (check)
        COVER_TO_SEND: true,

        //After this time he will try to send again. order minions?
        DELTA_SEARCH_TIME: 18,

        //How long to wait and not run after grenade suppression
        KILLA_AFTER_GRENADE_SUPPRESS_DELAY: 2,

        //If there are less than X bullets before attacking the enemy, then killa will reload
        KILLA_BULLET_TO_RELOAD: 15,

        //close range
        KILLA_CLOSE_ATTACK_DIST: 8,

        //Break duration
        KILLA_CLOSEATTACK_DELAY: 10,

        //After how many assaults must there be a break
        KILLA_CLOSEATTACK_TIMES: 3,

        //How long the shock lasts.
        KILLA_CONTUTION_TIME: 5,

        //Distance to seek cover in defense mode
        KILLA_DEF_DIST_SQRT: 225,

        //If the place from which you need to suppress further than X, then it is not it will suppress.
        KILLA_DIST_TO_GO_TO_SUPPRESS: 6,

        //The distance within which the player is considered an enemy of killa
        KILLA_DITANCE_TO_BE_ENEMY_BOSS: 45,

        //Number of enemies to attack?
        KILLA_ENEMIES_TO_ATTACK: 3,

        //Killa base wait time in cover.
        KILLA_HOLD_DELAY: 5,

        //far distance
        KILLA_LARGE_ATTACK_DIST: 41,

        //medium distance
        KILLA_MIDDLE_ATTACK_DIST: 22,

        //If the enemies are in short range (less than 30m) the boss will assault them.
        KILLA_ONE_IS_CLOSE: 30,

        //to stop and wait for search distance
        KILLA_SEARCH_METERS: 30,

        //If the bot has not found anyone during this delta and has been closer than KILLA_SEARCH_METERS, then it will go and rest.
        KILLA_SEARCH_SEC_STOP_AFTER_COMING: 25,

        //In how many seconds the boss will start searching
        KILLA_START_SEARCH_SEC: 40,

        //How long does a killa hold from bullets flying by a mime? machinegun maybe?
        KILLA_TRIGGER_DOWN_DELAY: 1,

        //How long does a killa peek out of cover
        KILLA_WAIT_IN_COVER_COEF: 1,

        //Height distance within which the player is considered an enemy of killa
        KILLA_Y_DELTA_TO_BE_ENEMY_BOSS: 5,

        //If the enemy came closer than X to the retinue/boss then attack.
        KOJANIY_DIST_ENEMY_TOO_CLOSE: 17,

        //This radius is taken into account to account for the number of enemies.
        KOJANIY_DIST_TO_BE_ENEMY: 200,

        //The distance of at least 1 enemy to the loot is less than X when everyone is in position then attack
        KOJANIY_DIST_WHEN_READY: 40,

        //Loot access factor by distance for enemies is greater than 1
        KOJANIY_MANY_ENEMIES_COEF: 1.5,

        //Distance to loot to attack
        KOJANIY_MIN_DIST_TO_LOOT: 20,

        // no comments but looks like KOJANIY_MIN_DIST_TO_LOOT * KOJANIY_MIN_DIST_TO_LOOT
        KOJANIY_MIN_DIST_TO_LOOT_SQRT: 400,

        //Distance to the boss, if the distance to the potential cover is greater than X then the bots will not occupy it.
        MAX_DIST_COVER_BOSS: 25,

        //MAX_DIST_COVER_BOSS * this.MAX_DIST_COVER_BOSS;
        MAX_DIST_COVER_BOSS_SQRT: 625,

        //Distance if the enemy is closer than X then a check will be sent or a grenade roll requested
        MAX_DIST_DECIDER_TO_SEND: 35,

        //MAX_DIST_DECIDER_TO_SEND * MAX_DIST_DECIDER_TO_SEND
        MAX_DIST_DECIDER_TO_SEND_SQRT: 1225,

        //So much he will try to send (order or cause check?)
        PERSONS_SEND: 2,

        //Will the boss warn (depending on the distance)
        SHALL_WARN: true,

        //After the loss of the vision, the boss decides whether to send people to check in seconds
        TIME_AFTER_LOSE: 15,

        //But no more than X seconds later to send to check
        TIME_AFTER_LOSE_DELTA: 60,

        //This is the amount of time the boss will not shoot at the savage enemy while his retinue is dealing with him if this savage does not shoot at the boss himself
        WAIT_NO_ATTACK_SAVAGE: 10,
      },
      Change: {
        //Aim speed factor when blinded
        FLASH_ACCURATY: 1.6,

        //Notice rate factor when blinded
        FLASH_GAIN_SIGHT: 1.8,

        //range hearing factor when blinded
        FLASH_HEARING: 1,

        //Chance factor to lie down in case of sudden danger when blinded
        FLASH_LAY_CHANCE: 1,

        //Aim speed factor when blinded
        FLASH_PRECICING: 1.6,

        //accuracy factor when blinded
        FLASH_SCATTERING: 1.6,

        //visibility factor when blinded
        FLASH_VISION_DIST: 0.05,

        //aim speed factor when inside smoke
        SMOKE_ACCURATY: 1.6,

        //Reacquire target speed factor when inside smoke
        SMOKE_GAIN_SIGHT: 1.6,

        //range audibility factor when inside smoke
        SMOKE_HEARING: 1,

        //Chance factor to lie down in case of sudden danger when inside smoke
        SMOKE_LAY_CHANCE: 1.6,

        //Aim speed factor when inside smoke
        SMOKE_PRECICING: 1.6,

        //accuracy factor when inside smoke
        SMOKE_SCATTERING: 1.6,

        //visibility factor when inside smoke
        SMOKE_VISION_DIST: 0.6,

        //hearing range factor when stunned
        STUN_HEARING: 0.01,
      },
      Core: {
        //Aim speed
        AccuratySpeed: 0.3,

        // normal and regular .. wtf
        AimingType: 'normal',

        //can use grenades
        CanGrenade: true,

        //can run
        CanRun: true,

        //damage coefficient.. does more damage the higher this is.  1 should be normal/no change.
        DamageCoeff: 1,

        // how far they can see affected by this coefficient?
        GainSightCoef: 0.2,

        //hearing range modifier
        HearingSense: 1.85,

        //what distance they use a pistol
        PistolFireDistancePref: 35,

        //what distance they use a rifle
        RifleFireDistancePref: 100,

        //accuracy modifier per meter in close range
        ScatteringClosePerMeter: 0.1,

        //accuracy modifier per meter
        ScatteringPerMeter: 0.05,

        //what distance to use a shotgun
        ShotgunFireDistancePref: 50,

        // bot visible angle
        VisibleAngle: 130,

        // bot visible distance
        VisibleDistance: 120,

        //bot wait in cover between shots in seconds
        WaitInCoverBetweenShotsSec: 1.5,
      },
      Cover: {
        //Variables set in update cycle
        //this.SDIST_MAX_REWORK_NOT_TO_SHOOT = this.DIST_MAX_REWORK_NOT_TO_SHOOT * this.DIST_MAX_REWORK_NOT_TO_SHOOT;
        //this.MIN_TO_ENEMY_TO_BE_NOT_SAFE_SQRT = this.MIN_TO_ENEMY_TO_BE_NOT_SAFE * this.MIN_TO_ENEMY_TO_BE_NOT_SAFE;
        //this.STAY_IF_FAR_SQRT = this.STAY_IF_FAR * this.STAY_IF_FAR;
        //this.RUN_IF_FAR_SQRT = this.RUN_IF_FAR * this.RUN_IF_FAR;
        //this.DIST_CANT_CHANGE_WAY_SQR = this.DIST_CANT_CHANGE_WAY * this.DIST_CANT_CHANGE_WAY;
        //this.MAX_DIST_OF_COVER_SQR = this.MAX_DIST_OF_COVER * this.MAX_DIST_OF_COVER;

        //Delta in time (seconds) to recalculate finding cover while running.
        CHANGE_RUN_TO_COVER_SEC: 5,

        //Delta to recalculate finding cover while running from a grenade.
        CHANGE_RUN_TO_COVER_SEC_GREANDE: 0.6,

        //Check if a cover is safe by whether an enemy is looking at it.
        CHECK_COVER_ENEMY_LOOK: true,

        //????
        CLOSE_DIST_POINT_SQRT: 4,

        //After how many seconds for peeking out from behind the cover, the position will definitely be considered impenetrable.
        DELTA_SEEN_FROM_COVE_LAST_POS: 15,

        //When searching points for the maximum proximity to the bot, the Y delta will be taken into account
        DEPENDS_Y_DIST_TO_BOT: false,

        //If we have already approached our destination point (Cover) by X meters, then it cannot be changed
        DIST_CANT_CHANGE_WAY: 5,

        //DIST_CANT_CHANGE_WAY * DIST_CANT_CHANGE_WAY
        DIST_CANT_CHANGE_WAY_SQR: 25,

        //If the player is looking at me and is closer than X then cover is considered unreliable and will be abandoned
        DIST_CHECK_SFETY: 9,

        //How long after a bot is kicked out of cover it will be in a dogfight
        DOG_FIGHT_AFTER_LEAVE: 4,

        //If the enemy came closer than X and the enemy was visible, then the bot will leave cover
        ENEMY_DIST_TO_GO_OUT: 1,

        //If closer to the point than GOOD_DIST_TO_POINT*X, then the point is good
        GOOD_DIST_TO_POINT_COEF: 1.8,

        //Time for the bot to peek and hide behind cover
        HIDE_TO_COVER_TIME: 1.5,

        //If more than X enemies hit the bot, it will consider the cover invalid
        HITS_TO_LEAVE_COVER: 1,

        //If non-enemies hit the bot more than X, then it will consider the cover invalid
        HITS_TO_LEAVE_COVER_UNKNOWN: 1,

        //The time if the last point seen was less than so many 100 seconds when examining the suspicious location.
        LOOK_LAST_ENEMY_POS_LOOKAROUND: 45,

        //If the last enemy seen was less than this many seconds ago, then the bot not in cover position will look at the last known point
        LOOK_LAST_ENEMY_POS_MOVING: 1.5,

        //If the last enemy seen was less than X seconds ago, and the bot was hit recently, then the bot will look in the direction of damage
        LOOK_TO_HIT_POINT_IF_LAST_ENEMY: 3,

        //The maximum distance at which the bot is considered to be in cover, after re-search for a point of cover
        MAX_DIST_OF_COVER: 4,

        //MAX_DIST_OF_COVER * MAX_DIST_OF_COVER
        MAX_DIST_OF_COVER_SQR: 16,

        //This many seconds of cover will remain unreliable.
        MAX_SPOTTED_TIME_SEC: 45,

        //If a number greater than 0 is specified, then the bot will try to choose shelters with a protection level greater than X
        MIN_DEFENCE_LEVEL: 22,

        //??? I guess minimum distance to the enemy before seeking cover
        MIN_DIST_TO_ENEMY: 9,

        //??? move to cover if bot discovers a target
        MOVE_TO_COVER_WHEN_TARGET: false,

        //Ignore walls while sitting in cover when reacting to shots.
        NOT_LOOK_AT_WALL_IS_DANGER: true,

        //Max deflection angle when bot sits in cover and looks along the wall
        OFFSET_LOOK_ALONG_WALL_ANG: 20,

        //max Time after which the ambushed god can return to attack mode
        RETURN_TO_ATTACK_AFTER_AMBUSH_MAX: 50,

        //min Time after which the ambushed god can return to attack mode
        RETURN_TO_ATTACK_AFTER_AMBUSH_MIN: 20,

        //run to cover if possible when there are no enemies
        RUN_COVER_IF_CAN_AND_NO_ENEMIES: false,

        //Bot will run for cover if it is closer than X
        RUN_IF_FAR: 7,

        //RUN_IF_FAR * RUN_IF_FAR
        RUN_IF_FAR_SQRT: 225,

        //If a shot was fired next to a bot that is sitting in cover, then it will count no more than once every X seconds
        SHOOT_NEAR_SEC_PERIOD: 0.5,

        //If there are more than X shots fired next to a bot that is sitting in cover, then it will consider this cover invalid
        SHOOT_NEAR_TO_LEAVE: 2,

        //The distance at which the bot gets scared of a shot and stops considering its cover safe
        SOUND_TO_GET_SPOTTED: 2,

        //If the bot was detected, then all hiding points in this radius will be marked as discovered
        SPOTTED_COVERS_RADIUS: 3,

        //When a grenade is noticed, all cover within this radius will be marked as unreliable.
        SPOTTED_GRENADE_RADIUS: 16,

        //This much cover will be unreliable after throwing a grenade nearby.
        SPOTTED_GRENADE_TIME: 7,

        //If the station is farther than X, then the bot will definitely not use this station
        STATIONARY_WEAPON_MAX_DIST_TO_USE: 25,

        //If the enemy is not visible for more than X seconds, then the bot will leave the station
        STATIONARY_WEAPON_NO_ENEMY_GETUP: 20,

        //Bot will shoot back at cover if it is closer than X but more than RUN_IF_FAR
        STAY_IF_FAR: 25,

        //STAY_IF_FAR * STAY_IF_FAR
        STAY_IF_FAR_SQRT: 625,

        //How often the roof is checked for integrity
        TIME_CHECK_SAFE: 2,

        //The time after the last firefight the bot will sit in cover (When attacking state) on any
        TIME_TO_MOVE_TO_COVER: 15,

        //So many bots sit in shelters, moving in dashes towards an enemy that has been lost from sight
        WAIT_INT_COVER_FINDING_ENEMY: 2,
      },
      Grenade: {
        //update cycle items
        //this.CLOSE_TO_SMOKE_TO_SHOOT_SQRT = this.CLOSE_TO_SMOKE_TO_SHOOT * this.CLOSE_TO_SMOKE_TO_SHOOT;
        //this.MAX_FLASHED_DIST_TO_SHOOT_SQRT = this.MAX_FLASHED_DIST_TO_SHOOT * this.MAX_FLASHED_DIST_TO_SHOOT;
        //this.REQUEST_DIST_MUST_THROW_SQRT = this.REQUEST_DIST_MUST_THROW * this.REQUEST_DIST_MUST_THROW;
        //this.RUN_AWAY_SQR = this.RUN_AWAY * this.RUN_AWAY;
        //this.ADD_GRENADE_AS_DANGER_SQR = this.ADD_GRENADE_AS_DANGER * this.ADD_GRENADE_AS_DANGER;
        //this.MIN_DIST_NOT_TO_THROW_SQR = this.MIN_DIST_NOT_TO_THROW * this.MIN_DIST_NOT_TO_THROW;
        //this.MIN_THROW_GRENADE_DIST_SQRT = this.MIN_THROW_GRENADE_DIST * this.MIN_THROW_GRENADE_DIST;

        //The distance if the bot is closer than it to the intended place of the grenade hit, then it will record the point in danger
        ADD_GRENADE_AS_DANGER: 65,

        // add_grenade_as_danger * add_grenade_as_danger
        ADD_GRENADE_AS_DANGER_SQR: 4225,

        //The bot will enter the Ambush state if smoke is thrown in its zone
        AMBUSH_IF_SMOKE_IN_ZONE_100: 40,

        //After how many seconds the bot will return to its previous state after smokes.
        AMBUSH_IF_SMOKE_RETURN_TO_ATTACK_SEC: 30,

        //Basic angle for calculating the throw of a grenade, 1 - 45 degrees, 2 - 25 degrees, 3 - 65 degrees, 4 - 15 degrees, 5 - 35, 6 - 55 degrees
        ANG_TYPE: 4,

        //Bot coefficient for attracting attention with a smoke grenade
        BE_ATTENTION_COEF: 4,

        //2 - Runs away from the exact location of the grenade. 3 - Runs away from the intended location of the grenade. The rest - runs away from the midpoint.
        BEWARE_TYPE: 2,

        //Can the bot throw grenades on direct contact with an enemy
        CAN_THROW_STRAIGHT_CONTACT: true,

        //Chance to run away while flashed, rather than shoot at the dot if he can.
        CHANCE_RUN_FLASHED_100: 0,

        //Chance to see a grenade flying at the bot
        CHANCE_TO_NOTIFY_ENEMY_GR_100: 99,

        //If enabled, then the grenade will not fly out of the hand, but from where the bot thought it should be thrown
        CHEAT_START_GRENADE_PLACE: false,

        //How long ago there must have been noise in smokes to shoot there
        CLOSE_TO_SMOKE_TIME_DELTA: 7,

        //How close to the source of the smoke do you have to be suspicious to start shooting there.
        CLOSE_TO_SMOKE_TO_SHOOT: 5,

        //close_to_smoke_to_shoot * close_to_smoke_to_shoot
        CLOSE_TO_SMOKE_TO_SHOOT_SQRT: 25,

        //How much suppression a grenade damage has
        DAMAGE_GRENADE_SUPPRESS_DELTA: 8,

        //In so many seconds after the throw, the danger point will become active (the bot will react to it => run away if necessary) (it used to be in globals)
        DELTA_GRENADE_START_TIME: 0.7,

        //Frequency of attempts to throw a grenade.. in seconds?
        DELTA_NEXT_ATTEMPT: 10,

        //Frequency of attempts to check if a grenade can be thrown from behind cover.. in seconds?
        DELTA_NEXT_ATTEMPT_FROM_COVER: 5,

        //The coefficient by which the time that the bot will receive after calculating the blindness is multiplied
        FLASH_GRENADE_TIME_COEF: 0.3,

        //Grenade Throw Spread Level (Smaller == More Accurate)
        GrenadePerMeter: 0.15,

        //accuracy of throwing a grenade. less is more accurate
        GrenadePrecision: 0.2,

        //If the last danger point is closer than X and the bot is in the blind, then he can shoot at it
        MAX_FLASHED_DIST_TO_SHOOT: 10,

        //max_flashed_dist_to_shoot * max_flashed_dist_to_shoot
        MAX_FLASHED_DIST_TO_SHOOT_SQRT: 100,

        //no details
        MAX_THROW_POWER: 16.7,

        //distance to check whether there are friends or the one who is throwing near the throw point
        MIN_DIST_NOT_TO_THROW: 8,

        //min_dist_not_to_throw * min_dist_not_to_throw
        MIN_DIST_NOT_TO_THROW_SQR: 64,

        //Min grenade throw distance
        MIN_THROW_GRENADE_DIST: 12,

        //min_throw_grenade_dist * min_throw_grenade_dist
        MIN_THROW_GRENADE_DIST_SQRT: 144,

        //The time when it is believed that the bot recently threw a grenade (Need to know that it's time to return to cover)
        NEAR_DELTA_THROW_TIME_SEC: 2,

        //The bot will NOT run away from grenades thrown by other bots
        NO_RUN_FROM_AI_GRENADES: false,

        //If the distance is less than X meters from the throw point and the enemy is visible, then the request will not be interrupted.
        REQUEST_DIST_MUST_THROW: 2,

        //request_dist_must_throw * request_dist_must_throw
        REQUEST_DIST_MUST_THROW_SQRT: 4,

        //The distance if the bot is closer than it to the intended place of the grenade hit, then it will record the point as danger
        RUN_AWAY: 22,

        //run_away * run_away
        RUN_AWAY_SQR: 484,

        //Probability of wanting to shoot smoke or use smoke grenades
        SHOOT_TO_SMOKE_CHANCE_100: 30,

        //smoke grenade. How much larger is the radius for the points that the bot will not occupy while there is smoke than the smoke collider
        SIZE_SPOTTED_COEF: 2,

        //Frequency of checking smokes. in seconds?
        SMOKE_CHECK_DELTA: 1,

        //How much suppression a smoke grenade has.. in seconds?
        SMOKE_SUPPRESS_DELTA: 20,

        //Will the bot stop to throw a grenade. If it stops, it will throw more accurately, if not, it may not throw exactly where it wants to.
        STOP_WHEN_THROW_GRENADE: true,

        //Delay for a direct throw of a grenade after the first contact
        STRAIGHT_CONTACT_DELTA_SEC: -1,

        //How much suppression does a stun grenade have
        STUN_SUPPRESS_DELTA: 9,

        //How many seconds until the bot shoots while flashed
        TIME_SHOOT_TO_FLASH: 4,

        //How many seconds to wait after throwing your flash grenade to turn away from the flash
        WAIT_TIME_TURN_AWAY: 0.2,
      },
      Hearing: {
        //If you shoot near the bot when he is not disturbed by anything from a distance of less than X, he will start to panic
        BOT_CLOSE_PANIC_DIST: 2,

        //Chance to hear a simple sound 0-1 (0 - never, 1 - always)
        CHANCE_TO_HEAR_SIMPLE_SOUND_0_1: 0.65,

        //Closer to this distance, a simple sound is always heard
        CLOSE_DIST: 10,

        //How much the bot will be distracted by the sound of a dead body radius?
        DEAD_BODY_SOUND_RAD: 30,

        //Coefficient of sound perception accuracy from non-hazardous sounds - more - more accurate
        DISPERSION_COEF: 2.6,

        //how much distance to find point of sound?
        DIST_PLACE_TO_FIND_POINT: 70,

        //After this distance, a simple sound is never heard
        FAR_DIST: 30,

        //Hearing delay when bot is in suspicious mode. in seconds?
        HEAR_DELAY_WHEN_HAVE_SMT: 0.5,

        //Hearing delay when bot is in peaceful mode. in seconds?
        HEAR_DELAY_WHEN_PEACE: 0.75,

        //When you look at your ears. He will only look at \"dangerous\" points.
        LOOK_ONLY_DANGER: false,

        //In how many seconds after the enemy disappears from view, the bot enters sentry mode
        LOOK_ONLY_DANGER_DELTA: 9,

        // reset timer distance for what?
        RESET_TIMER_DIST: 17,

        //The angle at which the shot is considered fired at the bot
        SOUND_DIR_DEEFREE: 30,
      },
      Lay: {
        //update cycle items
        //this.DIST_ENEMY_GETUP_LAY_SQRT = this.DIST_ENEMY_GETUP_LAY * this.DIST_ENEMY_GETUP_LAY;
        //this.DIST_ENEMY_NULL_DANGER_LAY_SQRT = this.DIST_ENEMY_NULL_DANGER_LAY * this.DIST_ENEMY_NULL_DANGER_LAY;
        //this.DIST_TO_COVER_TO_LAY_SQRT = this.DIST_TO_COVER_TO_LAY * this.DIST_TO_COVER_TO_LAY;
        //this.MIN_CAN_LAY_DIST_SQRT = this.MIN_CAN_LAY_DIST * this.MIN_CAN_LAY_DIST;
        //this.MAX_CAN_LAY_DIST_SQRT = this.MAX_CAN_LAY_DIST * this.MAX_CAN_LAY_DIST;
        //this.DIST_ENEMY_CAN_LAY_SQRT = this.DIST_ENEMY_CAN_LAY * this.DIST_ENEMY_CAN_LAY;

        //Chance to lie down if all conditions are met
        ATTACK_LAY_CHANCE: 25,

        //When laying down, it checks if it can fire at the last known enemy position from this position. (If not, then it may lie around the corner, etc.)
        CHECK_SHOOT_WHEN_LAYING: false,

        //if the bot lies for X seconds, then all points of fear will be reset to zero
        CLEAR_POINTS_OF_SCARE_SEC: 20,

        //how much time to get up after being shot?
        DAMAGE_TIME_TO_GETUP: 3,

        //After getting up again, you can lie down only after X seconds
        DELTA_AFTER_GETUP: 10,

        //The bot can only get up after X seconds after lying down
        DELTA_GETUP: 5,

        //The main limiter on the timings of the attempt to lie down (seconds)
        DELTA_LAY_CHECK: 2,

        //Delta checks during an attack: is it worth lying down
        DELTA_WANT_LAY_CHECL_SEC: 5,

        //If the enemy is closer than X, then it prohibits lying down if there is a visible enemy closer than X
        DIST_ENEMY_CAN_LAY: 15,

        //dist_enemy_can_lay * dist_enemy_can_lay
        DIST_ENEMY_CAN_LAY_SQRT: 225,

        //If the enemy is closer than X then it's time to get up
        DIST_ENEMY_GETUP_LAY: 10,

        //dist_enemy_getup_lay * dist_enemy_getup_lay
        DIST_ENEMY_GETUP_LAY_SQRT: 100,

        //If the enemy came closer than X, then reset all points of fear
        DIST_ENEMY_NULL_DANGER_LAY: 15,

        //dist_enemy_null_danger_lay * dist_enemy_null_danger_lay
        DIST_ENEMY_NULL_DANGER_LAY_SQRT: 225,

        //if there is less than X between the ground and grass, then you can lie down
        DIST_GRASS_TERRAIN_SQRT: 0.160000011,

        //if there is more than X before the shelter. one of the necessary conditions to lie down
        DIST_TO_COVER_TO_LAY: 3.5,

        //dist_to_cover_to_lay * dist_to_cover_to_lay
        DIST_TO_COVER_TO_LAY_SQRT: 12.25,

        //X multiplies the spread factor when aiming when the bot is down.
        LAY_AIM: 0.6,

        //Chance to lie down instead of running away (0..100)
        LAY_CHANCE_DANGER: 40,

        //If the scare point was closer than X then the bot may try to lie down
        MAX_CAN_LAY_DIST: 200,

        //max_can_lay_dist * max_can_lay_dist
        MAX_CAN_LAY_DIST_SQRT: 40000,

        //If the bot lies more than X, then it will stand up
        MAX_LAY_TIME: 35,

        //If the scare point was further than X then the bot may try to lie down
        MIN_CAN_LAY_DIST: 11,

        //min_can_lay_dist * min_can_lay_dist
        MIN_CAN_LAY_DIST_SQRT: 121,
      },
      Look: {
        //Update cycle times
        //this.DIST_SQRT_REPEATED_SEEN = this.DIST_REPEATED_SEEN * this.DIST_REPEATED_SEEN;
        //this.MAX_VISION_GRASS_METERS_OPT = 1f / this.MAX_VISION_GRASS_METERS;
        //this.MAX_VISION_GRASS_METERS_FLARE_OPT = 1f / this.MAX_VISION_GRASS_METERS_FLARE;

        //Frequency of searching for new bodies
        BODY_DELTA_TIME_SEARCH_SEC: 1.7,

        //can look to wall (this option does nothing i don't see it in code)
        CAN_LOOK_TO_WALL: false,

        // ? looking for heads at any distance
        CHECK_HEAD_ANY_DIST: false,

        //Next time delta update at close range
        CloseDeltaTimeSec: 0.1,

        //how close bot goes to look at body?
        COME_TO_BODY_DIST: 1.2,

        //If the wall is closer than X then the bot will look in the direction of travel when it goes to a suspicious point.
        DIST_CHECK_WALL: 20,

        //If the point the bot is looking at is closer than X. It can play walls
        DIST_NOT_TO_IGNORE_WALL: 15,

        //So much further in meters the enemy will be visible if he has a flashlight on.
        ENEMY_LIGHT_ADD: 45,

        //If the bot's vision range is less than X, then the ENEMY_LIGHT_COEF parameter takes effect
        ENEMY_LIGHT_START_DIST: 40,

        //Distance above which an object is considered far
        FAR_DISTANCE: 160,

        //Delta update of the next time at a far distance
        FarDeltaTimeSec: 3,

        //After disappearing from visibility, the bot will \"see\" the enemy for so many more seconds
        GOAL_TO_FULL_DISSAPEAR: 0.25,

        //After disappearing from visibility, the bot will still be able to shoot at the enemy for so many seconds
        GOAL_TO_FULL_DISSAPEAR_SHOOT: 0.0001,

        //TODO flashlights - literally what they wrote in code comments
        LightOnVisionDistance: 30,

        //Time to look at one direction when the bot is looking at a place.
        LOOK_AROUND_DELTA: 1.1,

        //If there were no other points of interest, then the bot will look at the last point where they saw their enemy
        LOOK_LAST_POSENEMY_IF_NO_DANGER_SEC: 25,

        //no comments
        MARKSMAN_VISIBLE_DIST_COEF: 1.15,

        //The distance through which the bot sees in the foliage
        MAX_VISION_GRASS_METERS: 0.4,

        //Weapon flash ratio. Affects how quickly the bot will notice the shooter
        MAX_VISION_GRASS_METERS_FLARE: 7,

        //no comments
        MAX_VISION_GRASS_METERS_FLARE_OPT: 0.125,

        //no comments
        MAX_VISION_GRASS_METERS_OPT: 0.9090909,

        //The distance above which the object is considered to be at an average distance
        MIDDLE_DIST: 90,

        //Next time delta update at medium distance
        MiddleDeltaTimeSec: 1,

        //no comments
        MIN_LOOK_AROUD_TIME: 20,

        //The lifetime of the point up to which the bot will pay attention to it with the standard inspection algorithm.
        OLD_TIME_POINT: 11,

        //not located in the code
        OPTIMIZE_TO_ONLY_BODY: true,

        //The time at which the visibility set is not reset.
        POSIBLE_VISION_SPACE: 1.2,

        //Visibility range with a flashlight
        VISIBLE_DISNACE_WITH_LIGHT: 43,

        //Delta at which the bot can turn in the other direction along the wall in the standard algorithm
        WAIT_NEW__LOOK_SENSOR: 7.8,

        //delta through which the bot will update the points in the standard algorithm where to look
        WAIT_NEW_SENSOR: 2.1,
      },
      Mind: {
        //update cycle items
        //this.MAX_AGGRO_BOT_DIST_SQR = this.MAX_AGGRO_BOT_DIST * this.MAX_AGGRO_BOT_DIST;
        // if (this.DEFAULT_BEAR_BEHAVIOUR.HasFlag(EWarnBehaviour.Attack))
        // {
        // 	this.DEFAULT_BEAR_BEHAVIOUR |= EWarnBehaviour.Warn;
        // }
        // if (this.DEFAULT_SAVAGE_BEHAVIOUR.HasFlag(EWarnBehaviour.Attack))
        // {
        // 	this.DEFAULT_SAVAGE_BEHAVIOUR |= EWarnBehaviour.Warn;
        // }
        // if (this.DEFAULT_USEC_BEHAVIOUR.HasFlag(EWarnBehaviour.Attack))
        // {
        // 	this.DEFAULT_USEC_BEHAVIOUR |= EWarnBehaviour.Warn;
        // }

        //Coefficient for converting a player's strength into ambush distance
        AI_POWER_COEF: 120,

        //nothing else written in the code
        AMBUSH_WHEN_UNDER_FIRE: true,

        //After the chela was frightened by shots and driven into the ambush, he will have a resistance to this for X sec
        AMBUSH_WHEN_UNDER_FIRE_TIME_RESIST: 60,

        //If a person was seen by someone less than X seconds ago, then we are going to attack him
        ATTACK_ENEMY_IF_PROTECT_DELTA_LAST_TIME_SEEN: 1.5,

        //The chance that after losing sight of the enemy and not having a new bot will go to look for the enemy immediately. Applicable only for offensive tactics. (Next comes a check on your strength and the strength of the enemy.)
        ATTACK_IMMEDIATLY_CHANCE_0_100: 40,

        //The square of the distance, if closer than which the bullet hits next to the bots, then he will perceive it (and if in cover, he will consider the cover bad)
        BULLET_FEEL_CLOSE_SDIST: 1,

        //The distance from which the bot can \"feel\" the bullet
        BULLET_FEEL_DIST: 360,

        //no other comments
        CAN_PANIC_IS_PROTECT: false,

        //no other comments
        CAN_RECEIVE_PLAYER_REQUESTS_BEAR: false,

        //no other comments
        CAN_RECEIVE_PLAYER_REQUESTS_SAVAGE: true,

        //no other comments
        CAN_RECEIVE_PLAYER_REQUESTS_USEC: false,

        //this seems like spt-only parameter. not in code so probably removed
        CAN_RECIVE_PLAYER_REQUESTS: true,

        //no other comments
        CAN_STAND_BY: true,

        //Can the bot pick up things thrown by other players
        CAN_TAKE_ITEMS: true,

        //Can the bot send requests to other bots.
        CAN_THROW_REQUESTS: true,

        //no other comments
        CAN_USE_MEDS: true,

        //Chance to do fuck you action/sound at the moment when the bot sees the player
        CHANCE_FUCK_YOU_ON_CONTACT_100: 10,

        //Chance that when the bot warns the player, he will take a look next to him (to shoot) and not speak
        CHANCE_SHOOT_WHEN_WARN_PLAYER_100: 25,

        //The probability that the bot will run if it is hit while it is in cover and cannot see the enemy (to shoot at)
        CHANCE_TO_RUN_CAUSE_DAMAGE_0_100: 35,

        //The chance that after the first 2 actions when warning the bot will stand and wait for the next 4 seconds.
        CHANCE_TO_STAY_WHEN_WARN_PLAYER_100: 80,

        //What is the coefficient when looking for a shelter point
        COVER_DIST_COEF: 1.5,

        //No other comments
        COVER_SECONDS_AFTER_LOSE_VISION: 10,

        //When looking for cover, the bot will always dive if it has damage.
        COVER_SELF_ALWAYS_IF_DAMAGED: false,

        //The time after which the bot will restore its characteristics after receiving damage
        DAMAGE_REDUCTION_TIME_SEC: 20,

        //Hazard point coefficient when looking for cover. danger point
        DANGER_POINT_CHOOSE_COEF: 1,

        //are wild enemies default for this bot
        DEFAULT_ENEMY_SAVAGE: true,

        //If there is an enemy, in order for the bot to start healing, the enemy must be further than X meters
        DIST_TO_ENEMY_YO_CAN_HEAL: 30,

        //No other comments
        DIST_TO_FOUND_SQRT: 400,

        //when running, when there is less than X left to the shelter point, then the basic dangerous points are reset to zero
        DIST_TO_STOP_RUN_ENEMY: 15,

        //Will enter the dogfight if the enemy is closer than X meters
        DOG_FIGHT_IN: 3,

        //Coming out of the dogfight
        DOG_FIGHT_OUT: 6,

        //list of hostile bot types.  public WildSpawnType[] ENEMY_BOT_TYPES = new WildSpawnType[0];
        ENEMY_BOT_TYPES: [],

        //The angle at which the bot understands that the enemy is looking at him
        ENEMY_LOOK_AT_ME_ANG: 15,

        //When the bot is looking for cover (in some cases) if the last visible enemy was visible less than X time ago, it will try to find a position with shooting
        FIND_COVER_TO_GET_POSITION_WITH_SHOOT: 2,

        //How much aggression grows if someone died near them
        FRIEND_AGR_KILL: 0.2,

        //How much the bot's aggression drops if they kill a cognate in his group.
        FRIEND_DEAD_AGR_LOW: -0.2,

        //After the bot says the phrase, the next bot from the same group will be able to say the phrase only through X. If X<0 then there is no delay.
        GROUP_ANY_PHRASE_DELAY: 1,

        //Same as GROUP_ANY_PHRASE_DELAY only applies to a specific phrase type. -1 means can't say same phrase
        GROUP_EXACTLY_PHRASE_DELAY: 4,

        //Break between treatments.
        HEAL_DELAY_SEC: 5,

        //Delay to feel hit if the bot is alert
        HIT_DELAY_WHEN_HAVE_SMT: -1,

        //Delay to feel the hit if the bot is at peace
        HIT_DELAY_WHEN_PEACE: -1,

        //Coefficient of accuracy of position perception where the player was hit more - more precisely;
        HIT_POINT_DETECTION: 4,

        //If a person was seen by someone less than X seconds ago - and we are out of cover and there is no cover, then we will cool down and set fire to him.
        HOLD_IF_PROTECT_DELTA_LAST_TIME_SEEN: 8.5,

        //What exactly to do when you come to a corpse 1 - use medicine kit, 2 - try to take a weapon, Default - look. public bool CAN_TALK = true;
        HOW_WORK_OVER_DEAD_BODY: 2,

        //No other comments
        LAST_ENEMY_LOOK_TO: 40,

        //What is the coefficient when looking for a shelter point
        LASTSEEN_POINT_CHOOSE_COEF: 0.2,

        //no other comments
        MAX_AGGRO_BOT_DIST: 100,

        //max_aggro_bot_dist * max_aggro_bot_dist
        MAX_AGGRO_BOT_DIST_SQR: 10000,

        //Max number of shots randomly fired at position from close range
        MAX_SHOOTS_TIME: 4,

        //max - thats all it say.. look at min_start_aggression_coef
        MAX_START_AGGRESION_COEF: 3,

        //The minimum damage that the bot must pull to get a point of danger
        MIN_DAMAGE_SCARE: 20,

        //Min number of shots at random at the position from which the fire was fired at close range
        MIN_SHOOTS_TIME: 2,

        //min Aggressiveness level. [0....inf] Self-strength is multiplied by this factor => probability of tactical models.
        MIN_START_AGGRESION_COEF: 1,

        //Don't run away to protect yourself
        NO_RUN_AWAY_FOR_SAFE: false,

        //If the part of the body is less than X then it will be treated
        PART_PERCENT_TO_HEAL: 0.65,

        //Distance to go to ambush for pistols and shotguns
        PISTOL_SHOTGUN_AMBUSH_DIST: 60,

        //When the bot is protecting someone and the last enemy was seen more than X seconds ago, then you can try to heal.
        PROTECT_DELTA_HEAL_SEC: 10,

        //what type of time to take in order to decide whether to attack or not. Real visible or \"feels like\"
        PROTECT_TIME_REAL: true,

        //If the enemy was visible less than X seconds ago, then the distance to the cover for running will be increased by 1.5
        SEC_TO_MORE_DIST_TO_RUN: 10,

        //If the bot has entered a dogfight more than 2 times in X seconds, it will instead fire from a spot.
        SHOOT_INSTEAD_DOG_FIGHT: 9,

        //Hazard point coefficient when looking for cover. simple point
        SIMPLE_POINT_CHOOSE_COEF: 0.4,

        //Distance to go to Ambush for the rest of the weapons
        STANDART_AMBUSH_DIST: 200,

        //Use of the surgeon kit only from the safe container
        SURGE_KIT_ONLY_SAFE_CONTAINER: false,

        //no other comments
        SUSPETION_POINT_CHANCE_ADD100: 0,

        //The bot speaks only through the queue of phrases and by priorities
        TALK_WITH_QUERY: true,

        //not in code.. maybe old field or spt?
        TIME_LEAVE_MAP: 23,

        //After X seconds, the bot will look for the enemy, having come to the place of his last vision! must be less than TIME_TO_FORGOR_ABOUT_ENEMY_SEC
        TIME_TO_FIND_ENEMY: 22,

        //After X seconds, the enemy ceases to be a task dispenser for bots.
        TIME_TO_FORGOR_ABOUT_ENEMY_SEC: 52,

        //The bot will be able to get scared only after this time after the disappearance of the last seen enemy from the field
        TIME_TO_RUN_TO_COVER_CAUSE_SHOOT_SEC: 15,

        //list of neutral types of bots. If the bot cannot warn, then all bots in this list become friendly or hostile depending on the value of DEFAULT_ENEMY_SAVAGE.   public WildSpawnType[] WARN_BOT_TYPES = new WildSpawnType[0];  think this is set by SPT?
        WARN_BOT_TYPES: [],

        //Will the bot chase axemen ?  Guessing bot will chase with meleeweapon
        WILL_PERSUE_AXEMAN: true,
      },
      Move: {
        //Update Cycle
        //this.DIST_TO_CAN_CHANGE_WAY_SQR = this.DIST_TO_CAN_CHANGE_WAY * this.DIST_TO_CAN_CHANGE_WAY;
        //this.DIST_TO_START_RAYCAST_SQR = this.DIST_TO_START_RAYCAST * this.DIST_TO_START_RAYCAST;
        //this.BASE_SQRT_START_SERACH = this.BASE_START_SERACH * this.BASE_START_SERACH;
        //this.FAR_DIST_SQR = this.FAR_DIST * this.FAR_DIST;

        //degree per second
        BASE_ROTATE_SPEED: 270,

        //base_start_search * base_start_search
        BASE_SQRT_START_SERACH: 1225,

        //The base radius of the search circle for hiding points to before abandoning the serach
        BASE_START_SERACH: 35,

        //If it was not specified what should be slowed down at the end, then the deceleration coefficient is
        BASESTART_SLOW_DIST: 1.1,

        //Chance that the bot will run when it runs out of ammo and is out of cover
        CHANCE_TO_RUN_IF_NO_AMMO_0_100: 100,

        //the bot goes and if the time of seeing the last place of the enemy is less than X, then he will look there
        DELTA_LAST_SEEN_ENEMY: 20,

        //The distance at which ... change direction?
        DIST_TO_CAN_CHANGE_WAY: 8,

        //DIST_TO_CAN_CHANGE_WAY * DIST_TO_CAN_CHANGE_WAY
        DIST_TO_CAN_CHANGE_WAY_SQR: 64,

        //Distance from which attempts to see the danger point begin
        DIST_TO_START_RAYCAST: 15,

        //DIST_TO_START_RAYCAST * DIST_TO_START_RAYCAST
        DIST_TO_START_RAYCAST_SQR: 225,

        //Distance to the point to start running towards it
        FAR_DIST: 4,

        //FAR_DIST * FAR_DIST
        FAR_DIST_SQR: 16,

        //The distance less than which the bot considers that he has come to the destination
        REACH_DIST: 0.5,

        //if the new shelter that the bot found is closer than X, then it already considers that it is in the shelter
        REACH_DIST_COVER: 2,

        //The distance less than which the bot considers that he has reached his destination when running
        REACH_DIST_RUN: 0.8,

        //If I do not see the enemy, then I will run away if I have an Ambush state
        RUN_IF_CANT_SHOOT: false,

        //You can run if the enemy is further than X meters
        RUN_IF_GAOL_FAR_THEN: 10,

        //If the bot runs to the point, then if the distance was less than X, then the bot will move to a step
        RUN_TO_COVER_MIN: 2,

        //How many seconds after the start of the movement with shooting will be checked for the ability to escape
        SEC_TO_CHANGE_TO_RUN: 3,

        //Deceleration factor
        SLOW_COEF: 7,

        //The distance at which the bot starts to slow down when approaching the end point of the route
        START_SLOW_DIST: 1.5,

        //Frequency of path recalculation then destinations
        UPDATE_TIME_RECAL_WAY: 7,

        //If the point to which goes less than X by Y, then it will be cut to 0
        Y_APPROXIMATION: 0.7,
      },
      Patrol: {
        //update cycle
        //this.MIN_DIST_TO_CLOSE_TALK_SQR = this.MIN_DIST_TO_CLOSE_TALK * this.MIN_DIST_TO_CLOSE_TALK;

        //Can take alternative paths
        CAN_CHOOSE_RESERV: true,

        //bot will be able to tilt at friendlies
        CAN_FRIENDLY_TILT: true,

        //no other comment.  Believe it means actually physically aiming with weapon (but not shooting).
        CAN_HARD_AIM: true,

        //Can the bot look at corpses in peaceful mode
        CAN_LOOK_TO_DEADBODIES: true,

        //no other comment.
        CAN_WATCH_SECOND_WEAPON: true,

        //Chance to change patrol path
        CHANCE_TO_CHANGE_WAY_0_100: 50,

        //Chance to take shortcuts when patrolling
        CHANCE_TO_CUT_WAY_0_100: 75,

        //The probability that the bot will try to make a control shot in the body of the enemy
        CHANCE_TO_SHOOT_DEADBODY: 52,

        //base time when the bot can decide to change paths
        CHANGE_WAY_TIME: 125.1,

        //The distance to the midpoint of the path for the backup paths so that the path can be selected.
        CLOSE_TO_SELECT_RESERV_WAY: 25,

        //see cut_way_min_0_1
        CUT_WAY_MAX_0_1: 0.65,

        //The minimum percentage by which the path distance during patrol mb is cut
        CUT_WAY_MIN_0_1: 0.4,

        //Base examination time
        DEAD_BODY_LOOK_PERIOD: 8,

        //Delta search for a service on a backup path for a soulful conversation
        FRIEND_SEARCH_SEC: 12,

        //The time that the bot spends at the inspection point on the normal path
        LOOK_TIME_BASE: 12,

        //If the bot wants to execute a warning request, it must be closer than X to the target on the Y axis - this is for the number of floors, but if the ground is curved, then it is better to put more.
        MAX_YDIST_TO_START_WARN_REQUEST_TO_REQUESTER: 5,

        //No other comments.
        MIN_DIST_TO_CLOSE_TALK: 5,

        //MIN_DIST_TO_CLOSE_TALK * MIN_DIST_TO_CLOSE_TALK
        MIN_DIST_TO_CLOSE_TALK_SQR: 25,

        //Delta on talkativeness
        MIN_TALK_DELAY: 35,

        //After how much time if the bot got on the backup route, it will try to find a new one.
        RESERVE_OUT_TIME: 30,

        //The time that the bot spends on the points of the Backup Path
        RESERVE_TIME_STAY: 72,

        //Lifetime of a suspicious point.
        SUSPETION_PLACE_LIFETIME: 7,

        //Delta phrases in a conversation
        TALK_DELAY: 1.1,

        //If there are no friends, then we will talk with such a delta
        TALK_DELAY_BIG: 15.1,

        //On spawning, will try to choose a backup path
        TRY_CHOOSE_RESERV_WAY_ON_START: false,

        //The coefficient by which the distance is cut in \"peaceful\" mode
        VISION_DIST_COEF_PEACE: 0.75,
      },
      Scattering: {
        //Update Cycle
        //this.DIST_FROM_OLD_POINT_TO_NOT_AIM_SQRT = this.DIST_FROM_OLD_POINT_TO_NOT_AIM * this.DIST_FROM_OLD_POINT_TO_NOT_AIM;

        //[Meters] How high does the sight bounce with amplitude
        AMPLITUDE_FACTOR: 0.015,

        //[Meters]. Aim amplitude speed
        AMPLITUDE_SPEED: 0.001,

        //Float - Coefficient of change in the working circle of accuracy during bleeding
        BloodFall: 1.45,

        //Percentage - Amount of ammo remaining to enter ammo saving state 0_1
        Caution: 0.03,

        //[Meters]. The distance from the new point aiming to the old one, if more than X, then the bot automatically considers that it did not aim, regardless of anything else.
        DIST_FROM_OLD_POINT_TO_NOT_AIM: 15,

        //DIST_FROM_OLD_POINT_TO_NOT_AIM * DIST_FROM_OLD_POINT_TO_NOT_AIM
        DIST_FROM_OLD_POINT_TO_NOT_AIM_SQRT: 225,

        //[Meters]. If the aiming point is closer than X then the bot will not shoot
        DIST_NOT_TO_SHOOT: 0.3,

        //[Degrees] - How much the bot's spread angle diverges when it hits multiplied by the damage.
        FromShot: 0.001,

        //Float - Coefficient of the convergence rate of the aiming angle when the arm is knocked out
        HandDamageAccuracySpeed: 1.3,

        //Float - Coefficient of change in the minimum circle of accuracy when a hand is knocked out
        HandDamageScatteringMinMax: 0.7,

        //At the moment of changing the position to lying / not lying, the current circle of information will increase by X
        LayFactor: 0.1,

        //[meters per distance] - Maximum spread angle
        MaxScatter: 0.3,

        //[meters per distance] - Minimum spread angle
        MinScatter: 0.015,

        //Coefficient. More = worse. How much will the speed of information change if the specific speed (ToSlowBotSpeed,ToLowBotSpeed) is in this interval
        MovingSlowCoef: 1.4,

        //At the time of the change of position, the current circle of convergence will increase by X * the degree of change of position
        PoseChnageCoef: 0.1,

        //Float - Recoil control coefficient dependent on weapon recoil. Increases the current circle when the bullet exits the barrel. For single shots.
        RecoilControlCoefShootDone: 0.0003,

        //Float - Recoil control coefficient dependent on weapon recoil. Increases the current circle when the bullet exits the barrel. for automatic fire
        RecoilControlCoefShootDoneAuto: 0.00015,

        //Float - how high the barrel throws up. Weapon recoil coefficient.
        RecoilYCoef: 0.0005,

        //Recoil decline rate up
        RecoilYCoefSppedDown: -0.52,

        //how much recoil can be increased.
        RecoilYMax: 1,

        //[meter per distance /sec] - Spread angle divergence speed. Bigger is better
        SpeedDown: -0.2,

        //[meters per distance /sec] - Spread angle convergence rate
        SpeedUp: 0.6,

        //Float - Coefficient by which the speed of convergence of the spread angle when aiming is multiplied. Bigger is better
        SpeedUpAim: 1.8,

        //Float - Factor to change the preferred circle of accuracy in ammo saving mode
        ToCaution: 0.6,

        //[Degrees/sec] - Bot turning speed after which the spread angle starts to diverge
        ToLowBotAngularSpeed: 140,

        //[Meters/sec] - Bot speed after which the convergence of the scatter angle starts to stop
        ToLowBotSpeed: 2.8,

        //[Meters/sec] - Bot speed after which the spread angle starts to slow down
        ToSlowBotSpeed: 1.8,

        // no other comments - must be [Degrees/sec]
        ToStopBotAngularSpeed: 80,

        //[meters/sec] Boat speed after which the spread angle starts to diverge
        ToUpBotSpeed: 4.3,

        //Float - Multiplier by how fast the ScatterSpeed value will converge when using tracer bullets
        TracerCoef: 1.3,

        //[meters per distance] - Working spread angle
        WorkingScatter: 0.15,
      },
      Shoot: {
        //Update Cycle
        //this.FAR_DIST_ENEMY_SQR = this.FAR_DIST_ENEMY * this.FAR_DIST_ENEMY;
        //this.RUN_DIST_NO_AMMO_SQRT = this.RUN_DIST_NO_AMMO * this.RUN_DIST_NO_AMMO;

        //Spread coefficient for automatic firing
        AUTOMATIC_FIRE_SCATTERING_COEF: 1.5,

        //How long will we hold our finger on the course with automatic fire
        BASE_AUTOMATIC_TIME: 0.1,

        //How many times do you have to be unable to shoot so as not to try to shoot further, but to go hide.
        CAN_SHOOTS_TIME_TO_AMBUSH: 333,

        //no commments
        CAN_STOP_SHOOT_CAUSE_ANIMATOR: true,

        //Chance to switch to auto fire at game start
        CHANCE_TO_CHANGE_TO_AUTOMATIC_FIRE_100: 76,

        //Chance to change weapons if ammo runs out.
        CHANCE_TO_CHANGE_WEAPON: 0,

        //Chance to switch weapons if out of ammo and the enemy has a helmet.
        CHANCE_TO_CHANGE_WEAPON_WITH_HELMET: 0,

        //time in seconds between entering the malfunktion node and inspecting the weapon
        DELAY_BEFORE_EXAMINE_MALFUNCTION: 0.5,

        //time in seconds between the inspection of the weapon and the actual repair
        DELAY_BEFORE_FIX_MALFUNCTION: 0.5,

        //Minimum delta on shooting weapons for cover
        FAR_DIST_ENEMY: 20,

        //far_dist_enemy * far_dist_enemy
        FAR_DIST_ENEMY_SQR: 400,

        //The bot will only change weapons if the enemy is closer than X.
        FAR_DIST_TO_CHANGE_WEAPON: 50,

        //How long will the finger be clamped on the course with a single fire
        FINGER_HOLD_SINGLE_SHOT: 0.14,

        //How long will the finger be clamped on the course during the fire of a stationary grenade launcher
        FINGER_HOLD_STATIONARY_GRENADE: 0.3,

        //How high will the recoil jump sideways depending on the vertical recoil
        HORIZONT_RECOIL_COEF: 0.4,

        //the bot will only change weapons if the enemy is farther than X.
        LOW_DIST_TO_CHANGE_WEAPON: 10,

        //The dependence coefficient of the frequency of sniper shots (every X meters - about a second)
        MARKSMAN_DIST_SEK_COEF: 44,

        //The coefficient on which the effective shooting distance is calculated to get the maximum shooting distance.
        MAX_DIST_COEF: 1.35,

        //How high will the recoil jump up in meters depending on the distance
        MAX_RECOIL_PER_METER: 0.2,

        //If the enemy was visible for more than NOT_TO_SEE_ENEMY_TO_WANT_RELOAD_SEC seconds ago and there are less than X rounds in the magazine, then it will reload
        NOT_TO_SEE_ENEMY_TO_WANT_RELOAD_PERCENT: 0.5,

        //Time for which the enemy must not be visible for the bot to want to reload
        NOT_TO_SEE_ENEMY_TO_WANT_RELOAD_SEC: 2,

        //type rate of fire 600 per min => 10 per sec => 1 in 0.1 sec.
        RECOIL_DELTA_PRESS: 0.15,

        //How high will the recoil jump up in meters depending on the distance
        RECOIL_PER_METER: 0.1,

        //The time for which the return will go to the original position
        RECOIL_TIME_NORMALIZE: 2,

        //If there have been no enemies for a long time and there are less than X percent of cartridges in the inventory, then it will reload
        RELOAD_PECNET_NO_ENEMY: 0.6,

        //a chance to repair weapons immediately at the moment of breakage, without running for cover. If it doesn’t work, the bot hides first, only then repairs
        REPAIR_MALFUNCTION_IMMEDIATE_CHANCE: 25,

        //If the enemy is farther than X and the bot runs out of ammo, it will run into cover and reload there.
        RUN_DIST_NO_AMMO: 25,

        //run_dist_no_ammo * run_dist_no_ammo
        RUN_DIST_NO_AMMO_SQRT: 625,

        //If more shots were made from cover than X, then it returns to cover
        SHOOT_FROM_COVER: 4,

        //This is how much the enemy will be considered suppressed if he is suppressed by bullets
        SUPPRESS_BY_SHOOT_TIME: 6,

        //How many times do you have to press the trigger for the enemy to become suppressed
        SUPPRESS_TRIGGERS_DOWN: 3,

        //100% - weapons break like ordinary players, 50% - 2 times less often, 0 - never
        VALIDATE_MALFUNCTION_CHANCE: 100,

        //Break between shots.
        WAIT_NEXT_SINGLE_SHOT: 0.3,

        //Maximum break between shots for snipers basically
        WAIT_NEXT_SINGLE_SHOT_LONG_MAX: 3.3,

        //Minimum break between shots for snipers basically
        WAIT_NEXT_SINGLE_SHOT_LONG_MIN: 0.8,

        //Break between shots stationary grenade launcher.
        WAIT_NEXT_STATIONARY_GRENADE: 1,
      },
    },
  },
}
